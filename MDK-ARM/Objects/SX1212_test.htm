<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\SX1212_test.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\SX1212_test.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Mon Jun 05 09:54:46 2023
<BR><P>
<H3>Maximum Stack Usage =       1132 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
SettingEndTime_Ensure &rArr; STM32Fxx_FlashPageWrite &rArr; STM32Fxxx_FlashWrite &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[12]">ADC1_COMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">ADC1_COMP_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[12]">ADC1_COMP_IRQHandler</a> from startup_stm32f051.o(.text) referenced from startup_stm32f051.o(RESET)
 <LI><a href="#[22]">CEC_IRQHandler</a> from startup_stm32f051.o(.text) referenced from startup_stm32f051.o(RESET)
 <LI><a href="#[3e]">CookerParse_Addr</a> from cooker_parse.o(i.CookerParse_Addr) referenced from cooker_parse.o(.constdata)
 <LI><a href="#[42]">CookerParse_Check</a> from cooker_parse.o(i.CookerParse_Check) referenced from cooker_parse.o(.constdata)
 <LI><a href="#[40]">CookerParse_Cmd</a> from cooker_parse.o(i.CookerParse_Cmd) referenced from cooker_parse.o(.constdata)
 <LI><a href="#[3d]">CookerParse_Header</a> from cooker_parse.o(i.CookerParse_Header) referenced from cooker_parse.o(.constdata)
 <LI><a href="#[3f]">CookerParse_Length</a> from cooker_parse.o(i.CookerParse_Length) referenced from cooker_parse.o(.constdata)
 <LI><a href="#[3c]">CookerParse_Nop</a> from cooker_parse.o(i.CookerParse_Nop) referenced from cooker_parse.o(.constdata)
 <LI><a href="#[41]">CookerParse_Payload</a> from cooker_parse.o(i.CookerParse_Payload) referenced from cooker_parse.o(.constdata)
 <LI><a href="#[f]">DMA1_Channel1_IRQHandler</a> from startup_stm32f051.o(.text) referenced from startup_stm32f051.o(RESET)
 <LI><a href="#[10]">DMA1_Channel2_3_IRQHandler</a> from startup_stm32f051.o(.text) referenced from startup_stm32f051.o(RESET)
 <LI><a href="#[11]">DMA1_Channel4_5_IRQHandler</a> from startup_stm32f051.o(.text) referenced from startup_stm32f051.o(RESET)
 <LI><a href="#[b]">EXTI0_1_IRQHandler</a> from startup_stm32f051.o(.text) referenced from startup_stm32f051.o(RESET)
 <LI><a href="#[c]">EXTI2_3_IRQHandler</a> from startup_stm32f051.o(.text) referenced from startup_stm32f051.o(RESET)
 <LI><a href="#[d]">EXTI4_15_IRQHandler</a> from startup_stm32f051.o(.text) referenced from startup_stm32f051.o(RESET)
 <LI><a href="#[9]">FLASH_IRQHandler</a> from startup_stm32f051.o(.text) referenced from startup_stm32f051.o(RESET)
 <LI><a href="#[39]">GasStove_DisRTC</a> from gasstove_service.o(i.GasStove_DisRTC) referenced from gasstove_service.o(.constdata)
 <LI><a href="#[3b]">GasStove_DisSet</a> from gasstove_service.o(i.GasStove_DisSet) referenced from gasstove_service.o(.constdata)
 <LI><a href="#[37]">GasStove_DisSetButton</a> from gasstove_service.o(i.GasStove_DisSetButton) referenced from gasstove_service.o(i.GasStove_Init)
 <LI><a href="#[3a]">GasStove_DisTiming</a> from gasstove_service.o(i.GasStove_DisTiming) referenced from gasstove_service.o(.constdata)
 <LI><a href="#[36]">GasStove_GasSensorAlarmCancle</a> from gasstove_service.o(i.GasStove_GasSensorAlarmCancle) referenced from gasstove_service.o(i.GasStove_GasSensorAlarmChk)
 <LI><a href="#[38]">GasStove_TimingIRQHandler</a> from gasstove_service.o(i.GasStove_TimingIRQHandler) referenced from gasstove_service.o(i.SettingTiming_Ensure)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_stm32f051.o(.text) referenced from startup_stm32f051.o(RESET)
 <LI><a href="#[1c]">I2C1_IRQHandler</a> from startup_stm32f051.o(.text) referenced from startup_stm32f051.o(RESET)
 <LI><a href="#[1d]">I2C2_IRQHandler</a> from startup_stm32f051.o(.text) referenced from startup_stm32f051.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_stm32f051.o(.text) referenced from startup_stm32f051.o(RESET)
 <LI><a href="#[7]">PVD_IRQHandler</a> from startup_stm32f051.o(.text) referenced from startup_stm32f051.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_stm32f051.o(.text) referenced from startup_stm32f051.o(RESET)
 <LI><a href="#[a]">RCC_IRQHandler</a> from startup_stm32f051.o(.text) referenced from startup_stm32f051.o(RESET)
 <LI><a href="#[8]">RTC_IRQHandler</a> from startup_stm32f051.o(.text) referenced from startup_stm32f051.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f051.o(.text) referenced from startup_stm32f051.o(RESET)
 <LI><a href="#[1e]">SPI1_IRQHandler</a> from startup_stm32f051.o(.text) referenced from startup_stm32f051.o(RESET)
 <LI><a href="#[1f]">SPI2_IRQHandler</a> from startup_stm32f051.o(.text) referenced from startup_stm32f051.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_stm32f051.o(.text) referenced from startup_stm32f051.o(RESET)
 <LI><a href="#[2e]">SettingEndTime_Ensure</a> from gasstove_service.o(i.SettingEndTime_Ensure) referenced from gasstove_service.o(i.GasStove_DisSetButton)
 <LI><a href="#[2e]">SettingEndTime_Ensure</a> from gasstove_service.o(i.SettingEndTime_Ensure) referenced from gasstove_service.o(i.GasStove_ExtEnsure)
 <LI><a href="#[26]">SettingRTC_AddHour</a> from gasstove_service.o(i.SettingRTC_AddHour) referenced from gasstove_service.o(i.GasStove_DisSetButton)
 <LI><a href="#[28]">SettingRTC_AddMinute</a> from gasstove_service.o(i.SettingRTC_AddMinute) referenced from gasstove_service.o(i.GasStove_DisSetButton)
 <LI><a href="#[27]">SettingRTC_AddTenMinute</a> from gasstove_service.o(i.SettingRTC_AddTenMinute) referenced from gasstove_service.o(i.GasStove_DisSetButton)
 <LI><a href="#[29]">SettingRTC_Ensure</a> from gasstove_service.o(i.SettingRTC_Ensure) referenced from gasstove_service.o(i.GasStove_DisSetButton)
 <LI><a href="#[2d]">SettingStartTime_Ensure</a> from gasstove_service.o(i.SettingStartTime_Ensure) referenced from gasstove_service.o(i.GasStove_DisSetButton)
 <LI><a href="#[2d]">SettingStartTime_Ensure</a> from gasstove_service.o(i.SettingStartTime_Ensure) referenced from gasstove_service.o(i.GasStove_ExtEnsure)
 <LI><a href="#[2a]">SettingStartTime_Hour</a> from gasstove_service.o(i.SettingStartTime_Hour) referenced from gasstove_service.o(i.GasStove_DisSetButton)
 <LI><a href="#[2a]">SettingStartTime_Hour</a> from gasstove_service.o(i.SettingStartTime_Hour) referenced from gasstove_service.o(i.GasStove_ExtEnsure)
 <LI><a href="#[2c]">SettingStartTime_Minute</a> from gasstove_service.o(i.SettingStartTime_Minute) referenced from gasstove_service.o(i.GasStove_DisSetButton)
 <LI><a href="#[2c]">SettingStartTime_Minute</a> from gasstove_service.o(i.SettingStartTime_Minute) referenced from gasstove_service.o(i.GasStove_ExtEnsure)
 <LI><a href="#[2b]">SettingStartTime_TenMinute</a> from gasstove_service.o(i.SettingStartTime_TenMinute) referenced from gasstove_service.o(i.GasStove_DisSetButton)
 <LI><a href="#[2b]">SettingStartTime_TenMinute</a> from gasstove_service.o(i.SettingStartTime_TenMinute) referenced from gasstove_service.o(i.GasStove_ExtEnsure)
 <LI><a href="#[34]">SettingTiming_Cancle</a> from gasstove_service.o(i.SettingTiming_Cancle) referenced from gasstove_service.o(i.GasStove_DisSetButton)
 <LI><a href="#[34]">SettingTiming_Cancle</a> from gasstove_service.o(i.SettingTiming_Cancle) referenced from gasstove_service.o(i.GasStove_ExtEnsure)
 <LI><a href="#[34]">SettingTiming_Cancle</a> from gasstove_service.o(i.SettingTiming_Cancle) referenced from gasstove_service.o(i.GasStove_Init)
 <LI><a href="#[34]">SettingTiming_Cancle</a> from gasstove_service.o(i.SettingTiming_Cancle) referenced from gasstove_service.o(i.SettingTiming_Ensure)
 <LI><a href="#[35]">SettingTiming_Ensure</a> from gasstove_service.o(i.SettingTiming_Ensure) referenced from gasstove_service.o(i.GasStove_GasSensorAlarmCancle)
 <LI><a href="#[35]">SettingTiming_Ensure</a> from gasstove_service.o(i.SettingTiming_Ensure) referenced from gasstove_service.o(i.SettingTiming_Hour)
 <LI><a href="#[35]">SettingTiming_Ensure</a> from gasstove_service.o(i.SettingTiming_Ensure) referenced from gasstove_service.o(i.SettingTiming_Minute)
 <LI><a href="#[35]">SettingTiming_Ensure</a> from gasstove_service.o(i.SettingTiming_Ensure) referenced from gasstove_service.o(i.SettingTiming_TenMinute)
 <LI><a href="#[31]">SettingTiming_Hour</a> from gasstove_service.o(i.SettingTiming_Hour) referenced from gasstove_service.o(i.GasStove_DisSetButton)
 <LI><a href="#[31]">SettingTiming_Hour</a> from gasstove_service.o(i.SettingTiming_Hour) referenced from gasstove_service.o(i.GasStove_ExtEnsure)
 <LI><a href="#[31]">SettingTiming_Hour</a> from gasstove_service.o(i.SettingTiming_Hour) referenced from gasstove_service.o(i.GasStove_Init)
 <LI><a href="#[33]">SettingTiming_Minute</a> from gasstove_service.o(i.SettingTiming_Minute) referenced from gasstove_service.o(i.GasStove_DisSetButton)
 <LI><a href="#[33]">SettingTiming_Minute</a> from gasstove_service.o(i.SettingTiming_Minute) referenced from gasstove_service.o(i.GasStove_ExtEnsure)
 <LI><a href="#[33]">SettingTiming_Minute</a> from gasstove_service.o(i.SettingTiming_Minute) referenced from gasstove_service.o(i.GasStove_Init)
 <LI><a href="#[32]">SettingTiming_TenMinute</a> from gasstove_service.o(i.SettingTiming_TenMinute) referenced from gasstove_service.o(i.GasStove_DisSetButton)
 <LI><a href="#[32]">SettingTiming_TenMinute</a> from gasstove_service.o(i.SettingTiming_TenMinute) referenced from gasstove_service.o(i.GasStove_ExtEnsure)
 <LI><a href="#[32]">SettingTiming_TenMinute</a> from gasstove_service.o(i.SettingTiming_TenMinute) referenced from gasstove_service.o(i.GasStove_Init)
 <LI><a href="#[30]">Setting_SysIdMatchEnsure</a> from gasstove_service.o(i.Setting_SysIdMatchEnsure) referenced from gasstove_service.o(i.GasStove_DisSetButton)
 <LI><a href="#[30]">Setting_SysIdMatchEnsure</a> from gasstove_service.o(i.Setting_SysIdMatchEnsure) referenced from gasstove_service.o(i.GasStove_ExtEnsure)
 <LI><a href="#[2f]">Setting_SysIdMatchStart</a> from gasstove_service.o(i.Setting_SysIdMatchStart) referenced from gasstove_service.o(i.GasStove_DisSetButton)
 <LI><a href="#[2f]">Setting_SysIdMatchStart</a> from gasstove_service.o(i.Setting_SysIdMatchStart) referenced from gasstove_service.o(i.GasStove_ExtEnsure)
 <LI><a href="#[5]">SysTick_Handler</a> from stm32fxxx_misc.o(i.SysTick_Handler) referenced from startup_stm32f051.o(RESET)
 <LI><a href="#[24]">SystemInit</a> from system_stm32f0xx.o(i.SystemInit) referenced from startup_stm32f051.o(.text)
 <LI><a href="#[18]">TIM14_IRQHandler</a> from startup_stm32f051.o(.text) referenced from startup_stm32f051.o(RESET)
 <LI><a href="#[19]">TIM15_IRQHandler</a> from startup_stm32f051.o(.text) referenced from startup_stm32f051.o(RESET)
 <LI><a href="#[1a]">TIM16_IRQHandler</a> from startup_stm32f051.o(.text) referenced from startup_stm32f051.o(RESET)
 <LI><a href="#[1b]">TIM17_IRQHandler</a> from startup_stm32f051.o(.text) referenced from startup_stm32f051.o(RESET)
 <LI><a href="#[13]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_stm32f051.o(.text) referenced from startup_stm32f051.o(RESET)
 <LI><a href="#[14]">TIM1_CC_IRQHandler</a> from startup_stm32f051.o(.text) referenced from startup_stm32f051.o(RESET)
 <LI><a href="#[15]">TIM2_IRQHandler</a> from startup_stm32f051.o(.text) referenced from startup_stm32f051.o(RESET)
 <LI><a href="#[16]">TIM3_IRQHandler</a> from startup_stm32f051.o(.text) referenced from startup_stm32f051.o(RESET)
 <LI><a href="#[17]">TIM6_DAC_IRQHandler</a> from startup_stm32f051.o(.text) referenced from startup_stm32f051.o(RESET)
 <LI><a href="#[e]">TS_IRQHandler</a> from startup_stm32f051.o(.text) referenced from startup_stm32f051.o(RESET)
 <LI><a href="#[20]">USART1_IRQHandler</a> from stm32fxxx_serial.o(i.USART1_IRQHandler) referenced from startup_stm32f051.o(RESET)
 <LI><a href="#[21]">USART2_IRQHandler</a> from stm32fxxx_serial.o(i.USART2_IRQHandler) referenced from startup_stm32f051.o(RESET)
 <LI><a href="#[6]">WWDG_IRQHandler</a> from startup_stm32f051.o(.text) referenced from startup_stm32f051.o(RESET)
 <LI><a href="#[25]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f051.o(.text)
 <LI><a href="#[23]">main</a> from app.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[25]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051.o(.text)
</UL>
<P><STRONG><a name="[cf]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[43]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[4a]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[d0]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[d1]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[d2]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[d3]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[d4]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>ADC1_COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>CEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>DMA1_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051.o(RESET)
</UL>
<P><STRONG><a name="[d5]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[46]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisTiming
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_HandleInit
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[d6]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[45]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingRTC_AddHour
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisSettingStartTime
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisSettingEndTime
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisRTC
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeapYear
</UL>

<P><STRONG><a name="[65]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxx_FlashPageWrite
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1621_SignService
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cooker_GetId
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEG_Service
</UL>

<P><STRONG><a name="[d7]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[d8]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[48]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1621_Init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_Flameout
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[d9]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[da]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[47]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cooker_Parse
</UL>

<P><STRONG><a name="[db]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[dc]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[49]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[44]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[dd]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[de]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[df]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[c1]"></a>BSP_OS_TimeDlyMs</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32fxxx_misc.o(i.BSP_OS_TimeDlyMs))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1212_DelayMs
</UL>

<P><STRONG><a name="[61]"></a>BSP_OS_TimeGet</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32fxxx_misc.o(i.BSP_OS_TimeGet))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEGBlinkSet
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setting_SysIdMatchStart
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTiming_TenMinute
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTiming_Minute
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTiming_Hour
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTiming_Ensure
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTiming_Cancle
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_GasSensorAlarmChk
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisTiming
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisRTC
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_AlarmChk
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyBoard_Service
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_Init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisplayService
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanRotation_Service
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cooker_Parse
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cooker_AFNChk
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_DisplayService
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEG_Service
</UL>

<P><STRONG><a name="[73]"></a>BSP_OS_Timeout</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32fxxx_misc.o(i.BSP_OS_Timeout))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_GasSensorAlarmChk
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisTiming
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisSet
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisRTC
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_AlarmChk
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyBoard_Service
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_GasBatStateChkService
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_FireStateChkService
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisplayService
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanRotation_Service
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_DisplayService
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEG_Service
</UL>

<P><STRONG><a name="[4b]"></a>BSP_RTCGet</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32fxxx_rtc.o(i.BSP_RTCGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BSP_RTCGet &rArr; RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_rtc
</UL>

<P><STRONG><a name="[4e]"></a>BSP_RTCSet</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, stm32fxxx_rtc.o(i.BSP_RTCSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = BSP_RTCSet &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_rtc
</UL>

<P><STRONG><a name="[6a]"></a>BuildPacket</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, sx1212.o(i.BuildPacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BuildPacket
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cooker_WirelessSendLoad
</UL>

<P><STRONG><a name="[51]"></a>Buzzer_GPIOInit</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, platform_chordtone.o(i.Buzzer_GPIOInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Buzzer_GPIOInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChordTone_Init
</UL>

<P><STRONG><a name="[54]"></a>Buzzer_PwrOff</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, platform_chordtone.o(i.Buzzer_PwrOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Buzzer_PwrOff
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChordTone_Init
</UL>

<P><STRONG><a name="[cb]"></a>CRC_CalcBlockCRC</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f0xx_crc.o(i.CRC_CalcBlockCRC))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CRC_CalcBlockCRC
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc32_ethernet_block
</UL>

<P><STRONG><a name="[cc]"></a>CRC_CalcCRC</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f0xx_crc.o(i.CRC_CalcCRC))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc32_ethernet_block
</UL>

<P><STRONG><a name="[ca]"></a>CRC_ResetDR</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f0xx_crc.o(i.CRC_ResetDR))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc32_ethernet_block
</UL>

<P><STRONG><a name="[56]"></a>CheckRTCRight</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, utilities.o(i.CheckRTCRight))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = CheckRTCRight &rArr; LeapYear &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeapYear
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_rtc
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingRTC_Ensure
</UL>

<P><STRONG><a name="[ce]"></a>ChordTone_CtrlService</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, chordtone.o(i.ChordTone_CtrlService))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[59]"></a>ChordTone_Init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, chordtone.o(i.ChordTone_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ChordTone_Init &rArr; ChordTone_PWMDevInit &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChordTone_PWMDevInit
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_PwrOff
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_GPIOInit
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5a]"></a>ChordTone_PWMDevInit</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, platform_chordtone.o(i.ChordTone_PWMDevInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ChordTone_PWMDevInit &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChordTone_Init
</UL>

<P><STRONG><a name="[78]"></a>ChordTone_Start</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, chordtone.o(i.ChordTone_Start))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_GasSensorAlarmChk
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_GasSensorAlarmCancle
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_AlarmChk
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyBoard_Service
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisplayService
</UL>

<P><STRONG><a name="[5e]"></a>Cooker_AFNChk</STRONG> (Thumb, 244 bytes, Stack size 8 bytes, cooker_extafn.o(i.Cooker_AFNChk))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Cooker_AFNChk &rArr; Cooker_Load &rArr; Cooker_WirelessSendLoad &rArr; SendRfFrame &rArr; SetRFMode &rArr; _SpiConfig &rArr; SpiInOut &rArr; SX1212_SCKSet
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_DisplayOn
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_DisplayOff
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OS_TimeGet
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cooker_Load
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookerParse_Check
</UL>

<P><STRONG><a name="[63]"></a>Cooker_ExtPinGPIOInit</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, platform_extpin.o(i.Cooker_ExtPinGPIOInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Cooker_ExtPinGPIOInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5c]"></a>Cooker_GetId</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, cooker_parse.o(i.Cooker_GetId))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Cooker_GetId &rArr; STM32Fxxx_GetEtag
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxxx_GetEtag
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookerParse_Check
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cooker_Load
</UL>

<P><STRONG><a name="[62]"></a>Cooker_Load</STRONG> (Thumb, 184 bytes, Stack size 96 bytes, cooker_parse.o(i.Cooker_Load))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = Cooker_Load &rArr; Cooker_WirelessSendLoad &rArr; SendRfFrame &rArr; SetRFMode &rArr; _SpiConfig &rArr; SpiInOut &rArr; SX1212_SCKSet
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cooker_GetId
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_ccitt_byte
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cooker_WirelessSendLoad
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cooker_SysIdMatch
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_Flameout
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cooker_AFNChk
</UL>

<P><STRONG><a name="[68]"></a>Cooker_Parse</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, cooker_parse.o(i.Cooker_Parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Cooker_Parse &rArr; crc16_ccitt_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OS_TimeGet
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_ccitt_byte
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[69]"></a>Cooker_SysIdMatch</STRONG> (Thumb, 28 bytes, Stack size 48 bytes, cooker_extafn.o(i.Cooker_SysIdMatch))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = Cooker_SysIdMatch &rArr; Cooker_Load &rArr; Cooker_WirelessSendLoad &rArr; SendRfFrame &rArr; SetRFMode &rArr; _SpiConfig &rArr; SpiInOut &rArr; SX1212_SCKSet
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cooker_Load
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setting_SysIdMatchStart
</UL>

<P><STRONG><a name="[7c]"></a>Cooker_SysIdMatchResult</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cooker_extafn.o(i.Cooker_SysIdMatchResult))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisSet
</UL>

<P><STRONG><a name="[67]"></a>Cooker_WirelessSendLoad</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, cooker_parse.o(i.Cooker_WirelessSendLoad))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Cooker_WirelessSendLoad &rArr; SendRfFrame &rArr; SetRFMode &rArr; _SpiConfig &rArr; SpiInOut &rArr; SX1212_SCKSet
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRfFrame
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuildPacket
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cooker_Load
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_Flameout
</UL>

<P><STRONG><a name="[af]"></a>FLASH_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_flash.o(i.FLASH_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxxx_FlashWrite
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxxx_FlashErase
</UL>

<P><STRONG><a name="[6c]"></a>FLASH_ErasePage</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, stm32f0xx_flash.o(i.FLASH_ErasePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FLASH_ErasePage &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxxx_FlashErase
</UL>

<P><STRONG><a name="[6f]"></a>FLASH_GetStatus</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, stm32f0xx_flash.o(i.FLASH_GetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[b1]"></a>FLASH_Lock</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f0xx_flash.o(i.FLASH_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxxx_FlashWrite
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxxx_FlashErase
</UL>

<P><STRONG><a name="[6e]"></a>FLASH_ProgramWord</STRONG> (Thumb, 104 bytes, Stack size 20 bytes, stm32f0xx_flash.o(i.FLASH_ProgramWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxxx_FlashWrite
</UL>

<P><STRONG><a name="[b0]"></a>FLASH_Unlock</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f0xx_flash.o(i.FLASH_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxxx_FlashWrite
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxxx_FlashErase
</UL>

<P><STRONG><a name="[6d]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32f0xx_flash.o(i.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>

<P><STRONG><a name="[72]"></a>FanRotation_Service</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, platform_extpin.o(i.FanRotation_Service))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FanRotation_Service &rArr; FanRotation_Level
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OS_Timeout
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OS_TimeGet
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanRotation_Level
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[53]"></a>GPIO_Init</STRONG> (Thumb, 144 bytes, Stack size 20 bytes, stm32f0xx_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1212_DevInit
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyBoard_Init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cooker_ExtPinGPIOInit
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1621_GPIOInit
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChordTone_PWMDevInit
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_GPIOInit
</UL>

<P><STRONG><a name="[5b]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 68 bytes, Stack size 20 bytes, stm32f0xx_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChordTone_PWMDevInit
</UL>

<P><STRONG><a name="[71]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_GasSensor
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanRotation_Level
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyBoard_InState
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1212_MISOGet
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1212_IRQ1Get
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1212_IRQ0Get
</UL>

<P><STRONG><a name="[95]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1621_WriteData
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1212_SCKSet
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1212_NSSDataSet
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1212_NSSCfgSet
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1212_MOSISet
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1621_WriteCmd
</UL>

<P><STRONG><a name="[55]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1621_GPIOInit
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1621_WriteData
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_PwrOff
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1212_SCKSet
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1212_NSSDataSet
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1212_NSSCfgSet
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1212_MOSISet
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1621_WriteCmd
</UL>

<P><STRONG><a name="[82]"></a>GasStove_DisplayService</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, gasstove_service.o(i.GasStove_DisplayService))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = GasStove_DisplayService &rArr; GasStove_AlarmChk &rArr; GasStove_Flameout &rArr; Cooker_Load &rArr; Cooker_WirelessSendLoad &rArr; SendRfFrame &rArr; SetRFMode &rArr; _SpiConfig &rArr; SpiInOut &rArr; SX1212_SCKSet
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_FunReg
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChordTone_Start
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OS_Timeout
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OS_TimeGet
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_GasSensorAlarmChk
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_AlarmChk
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_Flameout
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[75]"></a>GasStove_FanRotation</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, platform_extpin.o(i.GasStove_FanRotation))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_AlarmChk
</UL>

<P><STRONG><a name="[76]"></a>GasStove_FireState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cooker_extafn.o(i.GasStove_FireState))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_AlarmChk
</UL>

<P><STRONG><a name="[86]"></a>GasStove_FireStateChkService</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, cooker_extafn.o(i.GasStove_FireStateChkService))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GasStove_FireStateChkService
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_DisplayOff
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OS_Timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[77]"></a>GasStove_Flameout</STRONG> (Thumb, 70 bytes, Stack size 56 bytes, cooker_extafn.o(i.GasStove_Flameout))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GasStove_Flameout &rArr; Cooker_Load &rArr; Cooker_WirelessSendLoad &rArr; SendRfFrame &rArr; SetRFMode &rArr; _SpiConfig &rArr; SpiInOut &rArr; SX1212_SCKSet
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cooker_WirelessSendLoad
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cooker_Load
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_Normal_Config
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_Awaken_Config
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_GasSensorAlarmChk
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_AlarmChk
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisplayService
</UL>

<P><STRONG><a name="[89]"></a>GasStove_GasBatStateChkService</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, cooker_extafn.o(i.GasStove_GasBatStateChkService))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GasStove_GasBatStateChkService
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_DisplayOff
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OS_Timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8a]"></a>GasStove_GasSensor</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, platform_extpin.o(i.GasStove_GasSensor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GasStove_GasSensor
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_GasSensorAlarmChk
</UL>

<P><STRONG><a name="[8b]"></a>GasStove_Init</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, gasstove_service.o(i.GasStove_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GasStove_Init &rArr; crc32_ethernet_block &rArr; CRC_CalcBlockCRC
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc32_ethernet_block
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxxx_FlashRead
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEG_Update
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEGBlinkSet
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyBoard_FunReg
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OS_TimeGet
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8f]"></a>HT1621_Init</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, platform_ht1621.o(i.HT1621_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HT1621_Init &rArr; HT1621_WriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1621_GPIOInit
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1621_WriteData
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1621_WriteCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[92]"></a>HT1621_SignService</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, ht1621.o(i.HT1621_SignService))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HT1621_SignService &rArr; HT1621_WriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_buf
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1621_WriteData
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_DisplayService
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEG_Service
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[90]"></a>HT1621_WriteCmd</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, platform_ht1621.o(i.HT1621_WriteCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HT1621_WriteCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1621_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1621_Init
</UL>

<P><STRONG><a name="[91]"></a>HT1621_WriteData</STRONG> (Thumb, 306 bytes, Stack size 40 bytes, platform_ht1621.o(i.HT1621_WriteData))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HT1621_WriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1621_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1621_SignService
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1621_Init
</UL>

<P><STRONG><a name="[97]"></a>InitSX1212</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, sx1212.o(i.InitSX1212))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = InitSX1212 &rArr; SetRFMode &rArr; _SpiConfig &rArr; SpiInOut &rArr; SX1212_SCKSet
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpiConfig
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1212_SCKSet
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1212_NSSDataSet
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1212_NSSCfgSet
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1212_MOSISet
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRFMode
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7e]"></a>KeyBoard_FunReg</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, keyboard.o(i.KeyBoard_FunReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = KeyBoard_FunReg
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTiming_TenMinute
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTiming_Minute
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTiming_Hour
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTiming_Ensure
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_GasSensorAlarmChk
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_GasSensorAlarmCancle
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_ExtEnsure
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisSetButton
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_Init
</UL>

<P><STRONG><a name="[9e]"></a>KeyBoard_InState</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, keyboard.o(i.KeyBoard_InState))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = KeyBoard_InState
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyBoard_Service
</UL>

<P><STRONG><a name="[9f]"></a>KeyBoard_Init</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, keyboard.o(i.KeyBoard_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = KeyBoard_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a0]"></a>KeyBoard_Service</STRONG> (Thumb, 262 bytes, Stack size 24 bytes, keyboard.o(i.KeyBoard_Service))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = KeyBoard_Service &rArr; KeyBoard_InState
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChordTone_Start
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OS_Timeout
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OS_TimeGet
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyBoard_InState
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7a]"></a>LED_SEGBlinkSet</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ht1621.o(i.LED_SEGBlinkSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LED_SEGBlinkSet
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OS_TimeGet
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setting_SysIdMatchStart
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setting_SysIdMatch
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTiming_TenMinute
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTiming_Minute
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTiming_Hour
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTiming_Ensure
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTiming_Cancle
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingStartTime_TenMinute
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingStartTime_Minute
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingStartTime_Hour
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingRTC_AddTenMinute
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingRTC_AddMinute
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingRTC_AddHour
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_ExtEnsure
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisTiming
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisSettingStartTime
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisSettingRTC
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisSettingEndTime
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisSetButton
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisRTC
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_Init
</UL>

<P><STRONG><a name="[79]"></a>LED_SEG_Update</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ht1621.o(i.LED_SEG_Update))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setting_SysIdMatch
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTiming_TenMinute
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTiming_Minute
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTiming_Hour
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTiming_Ensure
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTiming_Cancle
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingStartTime_TenMinute
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingStartTime_Minute
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingStartTime_Hour
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_ExtEnsure
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisTiming
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisSettingStartTime
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisSettingRTC
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisSettingEndTime
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisSetButton
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisRTC
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_Init
</UL>

<P><STRONG><a name="[58]"></a>LeapYear</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, utilities.o(i.LeapYear))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LeapYear &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckRTCRight
</UL>

<P><STRONG><a name="[60]"></a>Led_DisplayOff</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ht1621.o(i.Led_DisplayOff))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_GasSensorAlarmChk
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_ExtEnsure
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisSetButton
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_AlarmChk
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_GasBatStateChkService
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_FireStateChkService
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cooker_AFNChk
</UL>

<P><STRONG><a name="[5f]"></a>Led_DisplayOn</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ht1621.o(i.Led_DisplayOn))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_GasSensorAlarmChk
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_ExtEnsure
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisSetButton
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_AlarmChk
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cooker_AFNChk
</UL>

<P><STRONG><a name="[b5]"></a>PWR_BackupAccessCmd</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32f0xx_pwr.o(i.PWR_BackupAccessCmd))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxxx_RTCInit
</UL>

<P><STRONG><a name="[52]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc32_ethernet_block
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1212_DevInit
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyBoard_Init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cooker_ExtPinGPIOInit
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1621_GPIOInit
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChordTone_PWMDevInit
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_GPIOInit
</UL>

<P><STRONG><a name="[b4]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxxx_RTCInit
</UL>

<P><STRONG><a name="[b7]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32f0xx_rcc.o(i.RCC_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxxx_RTCInit
</UL>

<P><STRONG><a name="[b6]"></a>RCC_LSEConfig</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(i.RCC_LSEConfig))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxxx_RTCInit
</UL>

<P><STRONG><a name="[b9]"></a>RCC_RTCCLKCmd</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(i.RCC_RTCCLKCmd))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxxx_RTCInit
</UL>

<P><STRONG><a name="[b8]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(i.RCC_RTCCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxxx_RTCInit
</UL>

<P><STRONG><a name="[bb]"></a>RTC_ClearFlag</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f0xx_rtc.o(i.RTC_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxxx_RTCInit
</UL>

<P><STRONG><a name="[a4]"></a>RTC_EnterInitMode</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, stm32f0xx_rtc.o(i.RTC_EnterInitMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[a5]"></a>RTC_ExitInitMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f0xx_rtc.o(i.RTC_ExitInitMode))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[4d]"></a>RTC_GetDate</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, stm32f0xx_rtc.o(i.RTC_GetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_GetDate
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTCSet
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTCGet
</UL>

<P><STRONG><a name="[4c]"></a>RTC_GetTime</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32f0xx_rtc.o(i.RTC_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTCSet
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTCGet
</UL>

<P><STRONG><a name="[a3]"></a>RTC_Init</STRONG> (Thumb, 84 bytes, Stack size 12 bytes, stm32f0xx_rtc.o(i.RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RTC_Init &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxxx_RTCInit
</UL>

<P><STRONG><a name="[b3]"></a>RTC_ReadBackupRegister</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32f0xx_rtc.o(i.RTC_ReadBackupRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_ReadBackupRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxxx_RTCInit
</UL>

<P><STRONG><a name="[50]"></a>RTC_SetDate</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, stm32f0xx_rtc.o(i.RTC_SetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RTC_SetDate &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTCSet
</UL>

<P><STRONG><a name="[4f]"></a>RTC_SetTime</STRONG> (Thumb, 208 bytes, Stack size 24 bytes, stm32f0xx_rtc.o(i.RTC_SetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTCSet
</UL>

<P><STRONG><a name="[a7]"></a>RTC_WaitForSynchro</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, stm32f0xx_rtc.o(i.RTC_WaitForSynchro))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxxx_RTCInit
</UL>

<P><STRONG><a name="[ba]"></a>RTC_WriteBackupRegister</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f0xx_rtc.o(i.RTC_WriteBackupRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_WriteBackupRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxxx_RTCInit
</UL>

<P><STRONG><a name="[a8]"></a>ReceiveRfFrame</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, sx1212.o(i.ReceiveRfFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ReceiveRfFrame &rArr; SetRFMode &rArr; _SpiConfig &rArr; SpiInOut &rArr; SX1212_SCKSet
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpiConfig
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1212_NSSDataSet
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1212_IRQ0Get
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRFMode
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiInOut
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ab]"></a>STM32Fxx_FlashPageWrite</STRONG> (Thumb, 108 bytes, Stack size 1048 bytes, stm32fxx_flash.o(i.STM32Fxx_FlashPageWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 1116<LI>Call Chain = STM32Fxx_FlashPageWrite &rArr; STM32Fxxx_FlashWrite &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxxx_FlashWrite
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxxx_FlashErase
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxxx_FlashRead
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingStartTime_Ensure
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingEndTime_Ensure
</UL>

<P><STRONG><a name="[ae]"></a>STM32Fxxx_CountDelayus</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, stm32fxxx_misc.o(i.STM32Fxxx_CountDelayus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = STM32Fxxx_CountDelayus &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1212_Delayus
</UL>

<P><STRONG><a name="[ac]"></a>STM32Fxxx_FlashErase</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, stm32fxx_flash.o(i.STM32Fxxx_FlashErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = STM32Fxxx_FlashErase &rArr; FLASH_ErasePage &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxx_FlashPageWrite
</UL>

<P><STRONG><a name="[8c]"></a>STM32Fxxx_FlashRead</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, stm32fxx_flash.o(i.STM32Fxxx_FlashRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = STM32Fxxx_FlashRead
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxx_FlashPageWrite
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_Init
</UL>

<P><STRONG><a name="[ad]"></a>STM32Fxxx_FlashWrite</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, stm32fxx_flash.o(i.STM32Fxxx_FlashWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = STM32Fxxx_FlashWrite &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxx_FlashPageWrite
</UL>

<P><STRONG><a name="[64]"></a>STM32Fxxx_GetEtag</STRONG> (Thumb, 80 bytes, Stack size 12 bytes, stm32fxxx_misc.o(i.STM32Fxxx_GetEtag))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = STM32Fxxx_GetEtag
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cooker_GetId
</UL>

<P><STRONG><a name="[b2]"></a>STM32Fxxx_RTCInit</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, stm32fxxx_rtc.o(i.STM32Fxxx_RTCInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = STM32Fxxx_RTCInit &rArr; RTC_Init &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ReadBackupRegister
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ClearFlag
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKConfig
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKCmd
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSEConfig
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_BackupAccessCmd
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
</UL>

<P><STRONG><a name="[c0]"></a>SX1212_DelayMs</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, platform_sx1212.o(i.SX1212_DelayMs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SX1212_DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OS_TimeDlyMs
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRFMode
</UL>

<P><STRONG><a name="[c2]"></a>SX1212_Delayus</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, platform_sx1212.o(i.SX1212_Delayus))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SX1212_Delayus &rArr; STM32Fxxx_CountDelayus &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxxx_CountDelayus
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRFMode
</UL>

<P><STRONG><a name="[c3]"></a>SX1212_DevInit</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, platform_sx1212.o(i.SX1212_DevInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SX1212_DevInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a9]"></a>SX1212_IRQ0Get</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, platform_sx1212.o(i.SX1212_IRQ0Get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SX1212_IRQ0Get
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveRfFrame
</UL>

<P><STRONG><a name="[c4]"></a>SX1212_IRQ1Get</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, platform_sx1212.o(i.SX1212_IRQ1Get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SX1212_IRQ1Get
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRfFrame
</UL>

<P><STRONG><a name="[c5]"></a>SX1212_MISOGet</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, platform_sx1212.o(i.SX1212_MISOGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SX1212_MISOGet
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiInOut
</UL>

<P><STRONG><a name="[9a]"></a>SX1212_MOSISet</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, platform_sx1212.o(i.SX1212_MOSISet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SX1212_MOSISet
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpiConfig
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSX1212
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiInOut
</UL>

<P><STRONG><a name="[98]"></a>SX1212_NSSCfgSet</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, platform_sx1212.o(i.SX1212_NSSCfgSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SX1212_NSSCfgSet
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpiConfig
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSX1212
</UL>

<P><STRONG><a name="[99]"></a>SX1212_NSSDataSet</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, platform_sx1212.o(i.SX1212_NSSDataSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SX1212_NSSDataSet
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpiConfig
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveRfFrame
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSX1212
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRfFrame
</UL>

<P><STRONG><a name="[9b]"></a>SX1212_SCKSet</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, platform_sx1212.o(i.SX1212_SCKSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SX1212_SCKSet
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpiConfig
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSX1212
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiInOut
</UL>

<P><STRONG><a name="[6b]"></a>SendRfFrame</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, sx1212.o(i.SendRfFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SendRfFrame &rArr; SetRFMode &rArr; _SpiConfig &rArr; SpiInOut &rArr; SX1212_SCKSet
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpiConfig
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1212_NSSDataSet
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1212_IRQ1Get
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRFMode
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiInOut
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cooker_WirelessSendLoad
</UL>

<P><STRONG><a name="[9c]"></a>SetRFMode</STRONG> (Thumb, 480 bytes, Stack size 8 bytes, sx1212.o(i.SetRFMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SetRFMode &rArr; _SpiConfig &rArr; SpiInOut &rArr; SX1212_SCKSet
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpiConfig
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1212_Delayus
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1212_DelayMs
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveRfFrame
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSX1212
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRfFrame
</UL>

<P><STRONG><a name="[83]"></a>SysTick_FunReg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32fxxx_misc.o(i.SysTick_FunReg))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTiming_Ensure
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTiming_Cancle
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_TimingIRQHandler
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisplayService
</UL>

<P><STRONG><a name="[c7]"></a>SysTick_HandleInit</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32fxxx_misc.o(i.SysTick_HandleInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SysTick_HandleInit &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32fxxx_misc.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>SystemInit</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, system_stm32f0xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051.o(.text)
</UL>
<P><STRONG><a name="[20]"></a>USART1_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32fxxx_serial.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USART1_IRQHandler &rArr; STM32Fxxx_Serail_EventISR_Handler &rArr; USART_ClearITPendingBit
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxxx_Serail_EventISR_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>USART2_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32fxxx_serial.o(i.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USART2_IRQHandler &rArr; STM32Fxxx_Serail_EventISR_Handler &rArr; USART_ClearITPendingBit
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxxx_Serail_EventISR_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f051.o(RESET)
</UL>
<P><STRONG><a name="[bf]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f0xx_usart.o(i.USART_ClearITPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxxx_Serail_EventISR_Handler
</UL>

<P><STRONG><a name="[bd]"></a>USART_GetFlagStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxxx_Serail_EventISR_Handler
</UL>

<P><STRONG><a name="[be]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f0xx_usart.o(i.USART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxxx_Serail_EventISR_Handler
</UL>

<P><STRONG><a name="[87]"></a>Updata_Awaken_Config</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, sx1212.o(i.Updata_Awaken_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Updata_Awaken_Config &rArr; _SpiConfig &rArr; SpiInOut &rArr; SX1212_SCKSet
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpiConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_Flameout
</UL>

<P><STRONG><a name="[88]"></a>Updata_Normal_Config</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, sx1212.o(i.Updata_Normal_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Updata_Normal_Config &rArr; _SpiConfig &rArr; SpiInOut &rArr; SX1212_SCKSet
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpiConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_Flameout
</UL>

<P><STRONG><a name="[9d]"></a>_SpiConfig</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, sx1212.o(i._SpiConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _SpiConfig &rArr; SpiInOut &rArr; SX1212_SCKSet
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1212_SCKSet
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1212_NSSDataSet
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1212_NSSCfgSet
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1212_MOSISet
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiInOut
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveRfFrame
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSX1212
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_Normal_Config
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_Awaken_Config
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRFMode
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRfFrame
</UL>

<P><STRONG><a name="[57]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32fxxx_misc.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxxx_CountDelayus
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckRTCRight
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cooker_AFNChk
</UL>

<P><STRONG><a name="[e0]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[e1]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[e2]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[5d]"></a>cmp_buf</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, utilities.o(i.cmp_buf))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = cmp_buf
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1621_SignService
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookerParse_Check
</UL>

<P><STRONG><a name="[66]"></a>crc16_ccitt_byte</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, crc.o(i.crc16_ccitt_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = crc16_ccitt_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cooker_Parse
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cooker_Load
</UL>

<P><STRONG><a name="[8d]"></a>crc32_ethernet_block</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, crc32ethernetstm32.o(i.crc32_ethernet_block))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = crc32_ethernet_block &rArr; CRC_CalcBlockCRC
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_ResetDR
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_CalcCRC
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_CalcBlockCRC
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingStartTime_Ensure
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingEndTime_Ensure
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_Init
</UL>

<P><STRONG><a name="[7b]"></a>get_rtc</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, rtc.o(i.get_rtc))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = get_rtc &rArr; BSP_RTCGet &rArr; RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTCGet
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingRTC_Ensure
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisRTC
</UL>

<P><STRONG><a name="[23]"></a>main</STRONG> (Thumb, 234 bytes, Stack size 8 bytes, app.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = main &rArr; GasStove_DisplayService &rArr; GasStove_AlarmChk &rArr; GasStove_Flameout &rArr; Cooker_Load &rArr; Cooker_WirelessSendLoad &rArr; SendRfFrame &rArr; SetRFMode &rArr; _SpiConfig &rArr; SpiInOut &rArr; SX1212_SCKSet
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpiConfig
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_HandleInit
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1212_DevInit
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveRfFrame
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyBoard_Service
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyBoard_Init
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSX1212
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1621_SignService
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1621_Init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_Init
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_GasBatStateChkService
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_FireStateChkService
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisplayService
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanRotation_Service
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cooker_Parse
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cooker_ExtPinGPIOInit
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChordTone_Init
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChordTone_CtrlService
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[cd]"></a>rtc_init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rtc.o(i.rtc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = rtc_init &rArr; STM32Fxxx_RTCInit &rArr; RTC_Init &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxxx_RTCInit
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c6]"></a>set_rtc</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, rtc.o(i.set_rtc))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = set_rtc &rArr; CheckRTCRight &rArr; LeapYear &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTCSet
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckRTCRight
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingRTC_Ensure
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[c9]"></a>SetSysClock</STRONG> (Thumb, 206 bytes, Stack size 12 bytes, system_stm32f0xx.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[74]"></a>GasStove_AlarmChk</STRONG> (Thumb, 382 bytes, Stack size 24 bytes, gasstove_service.o(i.GasStove_AlarmChk))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = GasStove_AlarmChk &rArr; GasStove_Flameout &rArr; Cooker_Load &rArr; Cooker_WirelessSendLoad &rArr; SendRfFrame &rArr; SetRFMode &rArr; _SpiConfig &rArr; SpiInOut &rArr; SX1212_SCKSet
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_DisplayOn
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_DisplayOff
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChordTone_Start
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OS_Timeout
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OS_TimeGet
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_FanRotation
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_Flameout
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_FireState
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisplayService
</UL>

<P><STRONG><a name="[39]"></a>GasStove_DisRTC</STRONG> (Thumb, 208 bytes, Stack size 16 bytes, gasstove_service.o(i.GasStove_DisRTC))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GasStove_DisRTC &rArr; get_rtc &rArr; BSP_RTCGet &rArr; RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_rtc
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEG_Update
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEGBlinkSet
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OS_Timeout
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OS_TimeGet
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gasstove_service.o(.constdata)
</UL>
<P><STRONG><a name="[3b]"></a>GasStove_DisSet</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, gasstove_service.o(i.GasStove_DisSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GasStove_DisSet &rArr; SettingTiming_Ensure &rArr; KeyBoard_FunReg
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cooker_SysIdMatchResult
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OS_Timeout
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTiming_Ensure
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gasstove_service.o(.constdata)
</UL>
<P><STRONG><a name="[37]"></a>GasStove_DisSetButton</STRONG> (Thumb, 338 bytes, Stack size 8 bytes, gasstove_service.o(i.GasStove_DisSetButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = GasStove_DisSetButton &rArr; GasStove_DisSettingStartTime &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_DisplayOn
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_DisplayOff
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEG_Update
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEGBlinkSet
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyBoard_FunReg
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setting_SysIdMatch
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisSettingStartTime
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisSettingRTC
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisSettingEndTime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gasstove_service.o(i.GasStove_Init)
</UL>
<P><STRONG><a name="[80]"></a>GasStove_DisSettingEndTime</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, gasstove_service.o(i.GasStove_DisSettingEndTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = GasStove_DisSettingEndTime &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEG_Update
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEGBlinkSet
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_ExtEnsure
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisSetButton
</UL>

<P><STRONG><a name="[7d]"></a>GasStove_DisSettingRTC</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gasstove_service.o(i.GasStove_DisSettingRTC))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GasStove_DisSettingRTC &rArr; LED_SEGBlinkSet
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEG_Update
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEGBlinkSet
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisSetButton
</UL>

<P><STRONG><a name="[7f]"></a>GasStove_DisSettingStartTime</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, gasstove_service.o(i.GasStove_DisSettingStartTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = GasStove_DisSettingStartTime &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEG_Update
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEGBlinkSet
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_ExtEnsure
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisSetButton
</UL>

<P><STRONG><a name="[3a]"></a>GasStove_DisTiming</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, gasstove_service.o(i.GasStove_DisTiming))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GasStove_DisTiming &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEG_Update
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEGBlinkSet
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OS_Timeout
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OS_TimeGet
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gasstove_service.o(.constdata)
</UL>
<P><STRONG><a name="[85]"></a>GasStove_ExtEnsure</STRONG> (Thumb, 260 bytes, Stack size 8 bytes, gasstove_service.o(i.GasStove_ExtEnsure))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = GasStove_ExtEnsure &rArr; GasStove_DisSettingStartTime &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_DisplayOn
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_DisplayOff
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEG_Update
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEGBlinkSet
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyBoard_FunReg
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setting_SysIdMatch
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisSettingStartTime
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisSettingEndTime
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setting_SysIdMatchEnsure
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingStartTime_Ensure
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingRTC_Ensure
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingEndTime_Ensure
</UL>

<P><STRONG><a name="[36]"></a>GasStove_GasSensorAlarmCancle</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gasstove_service.o(i.GasStove_GasSensorAlarmCancle))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GasStove_GasSensorAlarmCancle &rArr; KeyBoard_FunReg
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyBoard_FunReg
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChordTone_Start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gasstove_service.o(i.GasStove_GasSensorAlarmChk)
</UL>
<P><STRONG><a name="[84]"></a>GasStove_GasSensorAlarmChk</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, gasstove_service.o(i.GasStove_GasSensorAlarmChk))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = GasStove_GasSensorAlarmChk &rArr; GasStove_Flameout &rArr; Cooker_Load &rArr; Cooker_WirelessSendLoad &rArr; SendRfFrame &rArr; SetRFMode &rArr; _SpiConfig &rArr; SpiInOut &rArr; SX1212_SCKSet
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_DisplayOn
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_DisplayOff
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyBoard_FunReg
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChordTone_Start
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OS_Timeout
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OS_TimeGet
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_GasSensor
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_Flameout
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisplayService
</UL>

<P><STRONG><a name="[38]"></a>GasStove_TimingIRQHandler</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gasstove_service.o(i.GasStove_TimingIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GasStove_TimingIRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_FunReg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gasstove_service.o(i.SettingTiming_Ensure)
</UL>
<P><STRONG><a name="[2e]"></a>SettingEndTime_Ensure</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, gasstove_service.o(i.SettingEndTime_Ensure))
<BR><BR>[Stack]<UL><LI>Max Depth = 1132<LI>Call Chain = SettingEndTime_Ensure &rArr; STM32Fxx_FlashPageWrite &rArr; STM32Fxxx_FlashWrite &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc32_ethernet_block
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxx_FlashPageWrite
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_ExtEnsure
</UL>
<BR>[Address Reference Count : 2]<UL><LI> gasstove_service.o(i.GasStove_DisSetButton)
<LI> gasstove_service.o(i.GasStove_ExtEnsure)
</UL>
<P><STRONG><a name="[26]"></a>SettingRTC_AddHour</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, gasstove_service.o(i.SettingRTC_AddHour))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SettingRTC_AddHour &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEGBlinkSet
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gasstove_service.o(i.GasStove_DisSetButton)
</UL>
<P><STRONG><a name="[28]"></a>SettingRTC_AddMinute</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gasstove_service.o(i.SettingRTC_AddMinute))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SettingRTC_AddMinute &rArr; LED_SEGBlinkSet
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEGBlinkSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gasstove_service.o(i.GasStove_DisSetButton)
</UL>
<P><STRONG><a name="[27]"></a>SettingRTC_AddTenMinute</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gasstove_service.o(i.SettingRTC_AddTenMinute))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SettingRTC_AddTenMinute &rArr; LED_SEGBlinkSet
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEGBlinkSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gasstove_service.o(i.GasStove_DisSetButton)
</UL>
<P><STRONG><a name="[29]"></a>SettingRTC_Ensure</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, gasstove_service.o(i.SettingRTC_Ensure))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = SettingRTC_Ensure &rArr; set_rtc &rArr; CheckRTCRight &rArr; LeapYear &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_rtc
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_rtc
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckRTCRight
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_ExtEnsure
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gasstove_service.o(i.GasStove_DisSetButton)
</UL>
<P><STRONG><a name="[2d]"></a>SettingStartTime_Ensure</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, gasstove_service.o(i.SettingStartTime_Ensure))
<BR><BR>[Stack]<UL><LI>Max Depth = 1132<LI>Call Chain = SettingStartTime_Ensure &rArr; STM32Fxx_FlashPageWrite &rArr; STM32Fxxx_FlashWrite &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc32_ethernet_block
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32Fxx_FlashPageWrite
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_ExtEnsure
</UL>
<BR>[Address Reference Count : 2]<UL><LI> gasstove_service.o(i.GasStove_DisSetButton)
<LI> gasstove_service.o(i.GasStove_ExtEnsure)
</UL>
<P><STRONG><a name="[2a]"></a>SettingStartTime_Hour</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gasstove_service.o(i.SettingStartTime_Hour))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SettingStartTime_Hour &rArr; LED_SEGBlinkSet
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEG_Update
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEGBlinkSet
</UL>
<BR>[Address Reference Count : 2]<UL><LI> gasstove_service.o(i.GasStove_DisSetButton)
<LI> gasstove_service.o(i.GasStove_ExtEnsure)
</UL>
<P><STRONG><a name="[2c]"></a>SettingStartTime_Minute</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gasstove_service.o(i.SettingStartTime_Minute))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SettingStartTime_Minute &rArr; LED_SEGBlinkSet
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEG_Update
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEGBlinkSet
</UL>
<BR>[Address Reference Count : 2]<UL><LI> gasstove_service.o(i.GasStove_DisSetButton)
<LI> gasstove_service.o(i.GasStove_ExtEnsure)
</UL>
<P><STRONG><a name="[2b]"></a>SettingStartTime_TenMinute</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gasstove_service.o(i.SettingStartTime_TenMinute))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SettingStartTime_TenMinute &rArr; LED_SEGBlinkSet
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEG_Update
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEGBlinkSet
</UL>
<BR>[Address Reference Count : 2]<UL><LI> gasstove_service.o(i.GasStove_DisSetButton)
<LI> gasstove_service.o(i.GasStove_ExtEnsure)
</UL>
<P><STRONG><a name="[34]"></a>SettingTiming_Cancle</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gasstove_service.o(i.SettingTiming_Cancle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SettingTiming_Cancle &rArr; LED_SEGBlinkSet
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_FunReg
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEG_Update
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEGBlinkSet
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OS_TimeGet
</UL>
<BR>[Address Reference Count : 4]<UL><LI> gasstove_service.o(i.GasStove_DisSetButton)
<LI> gasstove_service.o(i.GasStove_ExtEnsure)
<LI> gasstove_service.o(i.GasStove_Init)
<LI> gasstove_service.o(i.SettingTiming_Ensure)
</UL>
<P><STRONG><a name="[35]"></a>SettingTiming_Ensure</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, gasstove_service.o(i.SettingTiming_Ensure))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SettingTiming_Ensure &rArr; KeyBoard_FunReg
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_FunReg
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEG_Update
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEGBlinkSet
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyBoard_FunReg
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OS_TimeGet
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisSet
</UL>
<BR>[Address Reference Count : 4]<UL><LI> gasstove_service.o(i.GasStove_GasSensorAlarmCancle)
<LI> gasstove_service.o(i.SettingTiming_Hour)
<LI> gasstove_service.o(i.SettingTiming_Minute)
<LI> gasstove_service.o(i.SettingTiming_TenMinute)
</UL>
<P><STRONG><a name="[31]"></a>SettingTiming_Hour</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, gasstove_service.o(i.SettingTiming_Hour))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SettingTiming_Hour &rArr; KeyBoard_FunReg
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEG_Update
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEGBlinkSet
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyBoard_FunReg
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OS_TimeGet
</UL>
<BR>[Address Reference Count : 3]<UL><LI> gasstove_service.o(i.GasStove_DisSetButton)
<LI> gasstove_service.o(i.GasStove_ExtEnsure)
<LI> gasstove_service.o(i.GasStove_Init)
</UL>
<P><STRONG><a name="[33]"></a>SettingTiming_Minute</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, gasstove_service.o(i.SettingTiming_Minute))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SettingTiming_Minute &rArr; KeyBoard_FunReg
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEG_Update
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEGBlinkSet
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyBoard_FunReg
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OS_TimeGet
</UL>
<BR>[Address Reference Count : 3]<UL><LI> gasstove_service.o(i.GasStove_DisSetButton)
<LI> gasstove_service.o(i.GasStove_ExtEnsure)
<LI> gasstove_service.o(i.GasStove_Init)
</UL>
<P><STRONG><a name="[32]"></a>SettingTiming_TenMinute</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, gasstove_service.o(i.SettingTiming_TenMinute))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SettingTiming_TenMinute &rArr; KeyBoard_FunReg
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEG_Update
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEGBlinkSet
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyBoard_FunReg
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OS_TimeGet
</UL>
<BR>[Address Reference Count : 3]<UL><LI> gasstove_service.o(i.GasStove_DisSetButton)
<LI> gasstove_service.o(i.GasStove_ExtEnsure)
<LI> gasstove_service.o(i.GasStove_Init)
</UL>
<P><STRONG><a name="[81]"></a>Setting_SysIdMatch</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gasstove_service.o(i.Setting_SysIdMatch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Setting_SysIdMatch &rArr; LED_SEGBlinkSet
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEG_Update
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEGBlinkSet
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_ExtEnsure
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_DisSetButton
</UL>

<P><STRONG><a name="[30]"></a>Setting_SysIdMatchEnsure</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gasstove_service.o(i.Setting_SysIdMatchEnsure))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Setting_SysIdMatchEnsure &rArr; GasStove_ExtEnsure &rArr; GasStove_DisSettingStartTime &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasStove_ExtEnsure
</UL>
<BR>[Address Reference Count : 2]<UL><LI> gasstove_service.o(i.GasStove_DisSetButton)
<LI> gasstove_service.o(i.GasStove_ExtEnsure)
</UL>
<P><STRONG><a name="[2f]"></a>Setting_SysIdMatchStart</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gasstove_service.o(i.Setting_SysIdMatchStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = Setting_SysIdMatchStart &rArr; Cooker_SysIdMatch &rArr; Cooker_Load &rArr; Cooker_WirelessSendLoad &rArr; SendRfFrame &rArr; SetRFMode &rArr; _SpiConfig &rArr; SpiInOut &rArr; SX1212_SCKSet
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_SEGBlinkSet
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cooker_SysIdMatch
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OS_TimeGet
</UL>
<BR>[Address Reference Count : 2]<UL><LI> gasstove_service.o(i.GasStove_DisSetButton)
<LI> gasstove_service.o(i.GasStove_ExtEnsure)
</UL>
<P><STRONG><a name="[bc]"></a>STM32Fxxx_Serail_EventISR_Handler</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32fxxx_serial.o(i.STM32Fxxx_Serail_EventISR_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = STM32Fxxx_Serail_EventISR_Handler &rArr; USART_ClearITPendingBit
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[c8]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, stm32fxxx_misc.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_HandleInit
</UL>

<P><STRONG><a name="[a2]"></a>RTC_Bcd2ToByte</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f0xx_rtc.o(i.RTC_Bcd2ToByte))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDate
</UL>

<P><STRONG><a name="[a6]"></a>RTC_ByteToBcd2</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_rtc.o(i.RTC_ByteToBcd2))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>

<P><STRONG><a name="[aa]"></a>SpiInOut</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, sx1212.o(i.SpiInOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SpiInOut &rArr; SX1212_SCKSet
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1212_SCKSet
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1212_MOSISet
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1212_MISOGet
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpiConfig
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveRfFrame
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRfFrame
</UL>

<P><STRONG><a name="[93]"></a>LED_SEG_Service</STRONG> (Thumb, 258 bytes, Stack size 16 bytes, ht1621.o(i.LED_SEG_Service))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LED_SEG_Service
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OS_Timeout
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OS_TimeGet
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1621_SignService
</UL>

<P><STRONG><a name="[a1]"></a>Led_Display</STRONG> (Thumb, 332 bytes, Stack size 0 bytes, ht1621.o(i.Led_Display))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_DisplayService
</UL>

<P><STRONG><a name="[94]"></a>Led_DisplayService</STRONG> (Thumb, 632 bytes, Stack size 8 bytes, ht1621.o(i.Led_DisplayService))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Led_DisplayService
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OS_Timeout
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OS_TimeGet
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Display
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1621_SignService
</UL>

<P><STRONG><a name="[3e]"></a>CookerParse_Addr</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, cooker_parse.o(i.CookerParse_Addr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CookerParse_Addr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cooker_parse.o(.constdata)
</UL>
<P><STRONG><a name="[42]"></a>CookerParse_Check</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, cooker_parse.o(i.CookerParse_Check))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = CookerParse_Check &rArr; Cooker_AFNChk &rArr; Cooker_Load &rArr; Cooker_WirelessSendLoad &rArr; SendRfFrame &rArr; SetRFMode &rArr; _SpiConfig &rArr; SpiInOut &rArr; SX1212_SCKSet
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cooker_GetId
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cooker_AFNChk
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_buf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cooker_parse.o(.constdata)
</UL>
<P><STRONG><a name="[40]"></a>CookerParse_Cmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, cooker_parse.o(i.CookerParse_Cmd))
<BR>[Address Reference Count : 1]<UL><LI> cooker_parse.o(.constdata)
</UL>
<P><STRONG><a name="[3d]"></a>CookerParse_Header</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, cooker_parse.o(i.CookerParse_Header))
<BR>[Address Reference Count : 1]<UL><LI> cooker_parse.o(.constdata)
</UL>
<P><STRONG><a name="[3f]"></a>CookerParse_Length</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cooker_parse.o(i.CookerParse_Length))
<BR>[Address Reference Count : 1]<UL><LI> cooker_parse.o(.constdata)
</UL>
<P><STRONG><a name="[3c]"></a>CookerParse_Nop</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cooker_parse.o(i.CookerParse_Nop))
<BR>[Address Reference Count : 1]<UL><LI> cooker_parse.o(.constdata)
</UL>
<P><STRONG><a name="[41]"></a>CookerParse_Payload</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, cooker_parse.o(i.CookerParse_Payload))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CookerParse_Payload
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cooker_parse.o(.constdata)
</UL>
<P><STRONG><a name="[70]"></a>FanRotation_Level</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, platform_extpin.o(i.FanRotation_Level))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FanRotation_Level
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanRotation_Service
</UL>

<P><STRONG><a name="[96]"></a>HT1621_Delay</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, platform_ht1621.o(i.HT1621_Delay))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1621_WriteData
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1621_WriteCmd
</UL>

<P><STRONG><a name="[8e]"></a>HT1621_GPIOInit</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, platform_ht1621.o(i.HT1621_GPIOInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HT1621_GPIOInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1621_Init
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
